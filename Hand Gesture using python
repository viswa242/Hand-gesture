import cv2
import mediapipe as mp
import pyautogui
x1 = y1 = x2 = y2 = 0
prev_dist = 0  # Previous distance to check for state change
threshold = 50  # Distance threshold to decide volume up or down
change_delay = 0.5  # Delay in frames between volume changes
frame_count = 0  # Frame counter
webcom = cv2.VideoCapture(0)
my_hands = mp.solutions.hands.Hands()
drawing_utils = mp.solutions.drawing_utils
while True:
    _, image = webcom.read()
    image = cv2.flip(image, 1)
    frame_height, frame_width, _ = image.shape
    rgb_image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
    output = my_hands.process(rgb_image)
    hands = output.multi_hand_landmarks
    if hands:
        for hand in hands:
            drawing_utils.draw_landmarks(image, hand)
            landmarks = hand.landmark
            for id, landmark in enumerate(landmarks):
                x = int(landmark.x * frame_width)
                y = int(landmark.y * frame_height)
                if id == 8:  # Index finger tip
                    cv2.circle(img=image, center=(x, y), radius=8, color=(0, 255, 255), thickness=3)
                    x1 = x
                    y1 = y
                if id == 4:  # Thumb tip
                    cv2.circle(img=image, center=(x, y), radius=8, color=(0, 0, 255), thickness=3)
                    x2 = x
                    y2 = y
        dist = ((x2 - x1) ** 2 + (y2 - y1) ** 2) ** 0.5 // 4
        cv2.line(image, (x1, y1), (x2, y2), (0, 255, 0), 5)
        frame_count += 1
        if frame_count > change_delay:
            if dist > threshold and dist > prev_dist:
                pyautogui.press("Volumeup")
                frame_count = 0  # Reset frame count after action
            elif dist < threshold and dist < prev_dist:
                pyautogui.press("Volumedown")
                frame_count = 0  # Reset frame count after action
            prev_dist = dist  # Update previous distance

    cv2.imshow("Hand Volume Control Using Python", image)
    key = cv2.waitKey(10)
    if key == 27:  # ESC key to exit
        break
webcom.release()
cv2.destroyAllWindows()
